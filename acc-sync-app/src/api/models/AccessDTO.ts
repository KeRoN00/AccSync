/* tslint:disable */
/* eslint-disable */
/**
 * kartografia-backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AccessDTO
 */
export interface AccessDTO {
    /**
     * 
     * @type {number}
     * @memberof AccessDTO
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof AccessDTO
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof AccessDTO
     */
    userName?: string | null;
    /**
     * 
     * @type {number}
     * @memberof AccessDTO
     */
    roleId?: number;
    /**
     * 
     * @type {string}
     * @memberof AccessDTO
     */
    roleName?: string | null;
    /**
     * 
     * @type {number}
     * @memberof AccessDTO
     */
    appId?: number;
}

/**
 * Check if a given object implements the AccessDTO interface.
 */
export function instanceOfAccessDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AccessDTOFromJSON(json: any): AccessDTO {
    return AccessDTOFromJSONTyped(json, false);
}

export function AccessDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccessDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'userName': !exists(json, 'userName') ? undefined : json['userName'],
        'roleId': !exists(json, 'roleId') ? undefined : json['roleId'],
        'roleName': !exists(json, 'roleName') ? undefined : json['roleName'],
        'appId': !exists(json, 'appId') ? undefined : json['appId'],
    };
}

export function AccessDTOToJSON(value?: AccessDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'userId': value.userId,
        'userName': value.userName,
        'roleId': value.roleId,
        'roleName': value.roleName,
        'appId': value.appId,
    };
}

