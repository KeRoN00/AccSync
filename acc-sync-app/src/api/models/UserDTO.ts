/* tslint:disable */
/* eslint-disable */
/**
 * kartografia-backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserDTO
 */
export interface UserDTO {
    /**
     * 
     * @type {number}
     * @memberof UserDTO
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    firstName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    lastName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    username?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    password?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    passwordSalt?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof UserDTO
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserDTO
     */
    lastLogin?: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserDTO
     */
    lastWrongLogin?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof UserDTO
     */
    isActive?: boolean;
    /**
     * 
     * @type {number}
     * @memberof UserDTO
     */
    countLogin?: number;
}

/**
 * Check if a given object implements the UserDTO interface.
 */
export function instanceOfUserDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserDTOFromJSON(json: any): UserDTO {
    return UserDTOFromJSONTyped(json, false);
}

export function UserDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'passwordSalt': !exists(json, 'passwordSalt') ? undefined : json['passwordSalt'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'lastLogin': !exists(json, 'lastLogin') ? undefined : (new Date(json['lastLogin'])),
        'lastWrongLogin': !exists(json, 'lastWrongLogin') ? undefined : (new Date(json['lastWrongLogin'])),
        'isActive': !exists(json, 'isActive') ? undefined : json['isActive'],
        'countLogin': !exists(json, 'countLogin') ? undefined : json['countLogin'],
    };
}

export function UserDTOToJSON(value?: UserDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'username': value.username,
        'email': value.email,
        'password': value.password,
        'passwordSalt': value.passwordSalt,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'lastLogin': value.lastLogin === undefined ? undefined : (value.lastLogin.toISOString()),
        'lastWrongLogin': value.lastWrongLogin === undefined ? undefined : (value.lastWrongLogin.toISOString()),
        'isActive': value.isActive,
        'countLogin': value.countLogin,
    };
}

